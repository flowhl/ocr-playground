<Application x:Class="OCRPlayground.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:OCRPlayground"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--XStrat Design Concept-->

        <!--Primary Labels-->
        <Style x:Key="PH1" TargetType="Label">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="PH2" TargetType="Label">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="P1" TargetType="Label">
            <Setter Property="Foreground" Value="#f0f0f0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="P2" TargetType="Label">
            <Setter Property="Foreground" Value="#f0f0f0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <Style x:Key="PS" TargetType="Label">
            <Setter Property="Foreground" Value="#f0f0f0" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <!--Secondary Labels-->
        <Style x:Key="SH1" TargetType="Label">
            <Setter Property="Foreground" Value="#336cb5" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="SH2" TargetType="Label">
            <Setter Property="Foreground" Value="#336cb5" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="S1" TargetType="Label">
            <Setter Property="Foreground" Value="#336cb5" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="S2" TargetType="Label">
            <Setter Property="Foreground" Value="#336cb5" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="SS" TargetType="Label">
            <Setter Property="Foreground" Value="#336cb5" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <!--Borders-->

        <Style x:Key="Area" TargetType="Border">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="#161616" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="CornerRadius" Value="10" />
        </Style>

        <Style x:Key="Control" TargetType="Border">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="#202020" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="CornerRadius" Value="10" />
        </Style>

        <!--Buttons-->

        <Style x:Key="Primary" TargetType="Button">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Background" Value="#282828" />
            <Setter Property="Margin" Value="10" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="Secondary" TargetType="Button">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Background" Value="#336cb5" />
            <Setter Property="Margin" Value="10" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="Small" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="#282828" />
            <Setter Property="Margin" Value="10" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"></Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="DataGridSmall" TargetType="Button">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="#336cb5" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="IsEnabled" Value="True" />
            <!-- add new setter for IsEnabled -->
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"></Setter>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#202020" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Menu item-->

        <!--// Menu with SubMenu Template //-->

        <ControlTemplate x:Key="Menu_SubMenu_Template" TargetType="{x:Type MenuItem}">

            <Border x:Name="border" Background="#303030" BorderBrush="#202020" BorderThickness="0" CornerRadius="5" Margin="1" Height="30" Width="150">

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="0" Width="0" />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="8" />
                    </Grid.ColumnDefinitions>

                    <!--// Icon //-->

                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Left" Height="12" Width="12" Margin="10,0,0,0" VerticalAlignment="Center" />

                    <!--// Menu Text //-->

                    <ContentPresenter ContentSource="Header" Grid.Column="2" TextBlock.Foreground="White" TextBlock.FontSize="16" HorizontalAlignment="Left" RecognizesAccessKey="True" Margin="3,0,0,0" VerticalAlignment="Center" />

                    <!--// Right Arrow Icon //-->

                    <Image Source="Assets/img_arrow.png" Stretch="None" Grid.Column="4" HorizontalAlignment="Left" VerticalAlignment="Center" />

                    <!--// Popup //-->

                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="0">

                        <Border x:Name="SubMenuBorder" Background="#303030" BorderBrush="#303030">

                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

                                <Grid RenderOptions.ClearTypeHint="Enabled">

                                    <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" />

                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" KeyboardNavigation.TabNavigation="Cycle" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>

                </Grid>
            </Border>


            <ControlTemplate.Triggers>

                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                </Trigger>

                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                </Trigger>

                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#404D5B" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--// Main Menu Template //-->

        <ControlTemplate x:Key="Menu_Template" TargetType="{x:Type MenuItem}">

            <Border x:Name="border" Background="#303030" BorderBrush="#202020" BorderThickness="0" Height="30" Width="150">

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="0" Width="0" />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="8" />
                    </Grid.ColumnDefinitions>

                    <!--// Icon //-->

                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Left" Height="12" Width="12" Margin="10,0,0,0" VerticalAlignment="Center" />

                    <!--// Menu Text //-->

                    <ContentPresenter ContentSource="Header" Grid.Column="2" TextBlock.Foreground="#FFFFFF" TextBlock.FontSize="14" HorizontalAlignment="Left" RecognizesAccessKey="True" Margin="3,0,0,0" VerticalAlignment="Center" />

                </Grid>
            </Border>


            <ControlTemplate.Triggers>

                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                </Trigger>

                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#404D5B" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                </Trigger>


            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--// Menu Item Template //-->

        <ControlTemplate x:Key="Item_Template" TargetType="{x:Type MenuItem}">

            <Border x:Name="border" Background="#303030" BorderBrush="#202020" BorderThickness="0" Height="30" Width="150">

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="0" Width="0" />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="8" />
                    </Grid.ColumnDefinitions>

                    <!--// Icon //-->

                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="12" Width="12" Margin="10,0,0,0" VerticalAlignment="Center" />

                    <!--// Menu Text //-->

                    <ContentPresenter ContentSource="Header" Grid.Column="2" TextBlock.Foreground="White" TextBlock.FontSize="14" HorizontalAlignment="Left" RecognizesAccessKey="True" Margin="1,0,0,0" VerticalAlignment="Center" />


                </Grid>
            </Border>


            <ControlTemplate.Triggers>

                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                </Trigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="Icon" Value="Visible" />
                </Trigger>

                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#404D5B" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#404D5B" />
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!--**************************
            * STYLE: Scrollbar
            ************************** -->

        <!--Scrollbar Thumbs-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0,1,0,1" Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#656565" />
            <Setter Property="Background" Value="#303030" />
            <Setter Property="Width" Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="7" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="#808080" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="#555555" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--DataGrid-->
        <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
            <Setter Property="Background" Value="#252526" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="BorderBrush" Value="#2B2B2B" />
            <Setter Property="RowBackground" Value="#2B2B2B" />
            <Setter Property="AlternatingRowBackground" Value="#252526" />
            <Setter Property="HorizontalGridLinesBrush" Value="#3C3C3C" />
            <Setter Property="VerticalGridLinesBrush" Value="#3C3C3C" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="RowHeight" Value="30" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#1E1E1E" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                        <Setter Property="BorderBrush" Value="#2B2B2B" />
                        <Setter Property="BorderThickness" Value="0,0,1,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="6" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                        <Setter Property="FontFamily" Value="Segoe UI" />
                        <Setter Property="SeparatorBrush" Value="#FFFFFF" />
                        <Setter Property="SeparatorVisibility" Value="Visible" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                        <Setter Property="BorderBrush" Value="#2B2B2B" />
                        <Setter Property="BorderThickness" Value="0,0,1,1" />
                        <Setter Property="Padding" Value="12" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="FontFamily" Value="Segoe UI" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Datagrid Combobox-->
        <Style x:Key="DarkDataGridComboBoxColumnStyle" TargetType="{x:Type DataGridComboBoxColumn}">
            <Setter Property="ElementStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Background" Value="#252526" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#4E4E4E" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="EditingElementStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Background" Value="#252526" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#4E4E4E" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
